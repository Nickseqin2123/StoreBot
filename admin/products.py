from aiogram import Router, F
from aiogram.types import Message
from mainstore.maindb import cfg
from requestss.user import getProducts
from models.models import Product
from keyboardd.common import admin_keyb
from keyboardd.inlines import inline


router = Router(name=__name__)


@router.message((F.text == '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å') & (F.from_user.id == cfg.admin)) # –ë–µ—Ä—ë–º —É—Å–ª–æ–≤–∏—è –≤ —Å–∫—É–æ–±–∫–∏ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –ø–æ–º–æ—â—å—é &(–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä)
async def admin(message: Message):
    await message.answer(
        text='–í—ã –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏',
        reply_markup=await admin_keyb()
    )


@router.message((F.from_user.id == cfg.admin) & (F.text == '–°–∫–ª–∞–¥'))
async def sklad(message: Message):
    products_response = await getProducts()
    
    if isinstance(products_response, str):
        await message.answer(
            text=products_response
        )
    else:
        for item in products_response:
            product: Product = item[0]
            
            await message.answer(text=f'''
üì¶ |–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ** <b>{product.name}</b> **
üí∞ |–¶–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞: ** <b>{product.price:.1f} —Ä—É–±.</b> **
üí´ |–ö–æ–ª-–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: ** <b>{product.count} –µ–¥.</b> **
üìù |–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ** <b><u>{product.description}</u></b> **
''', parse_mode='HTML', reply_markup=await inline(–£–±–∞–≤–∏—Ç—å={'id': product.id, 'name': product.name, 'operation': 'sub_admin'},
                                                  –î–æ–±–∞–≤–∏—Ç—å={'id': product.id, 'name': product.name, 'operation': 'add_admin'},
                                                  –£–¥–∞–ª–∏—Ç—å={'id': product.id, 'name': product.name, 'operation': 'delete_admin'}))